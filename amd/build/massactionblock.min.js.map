{"version":3,"sources":["../src/massactionblock.js"],"names":["sectionBoxes","isRebuilding","usedMoodleCssClasses","SECTION_NAME","MODULE_ID_PREFIX","SPINNER","DNDUPLOAD","cssIds","SELECT_ALL_LINK","DESELECT_ALL_LINK","HIDE_LINK","SHOW_LINK","MAKE_AVAILABLE_LINK","DUPLICATE_LINK","DELETE_LINK","MOVELEFT_LINK","MOVERIGHT_LINK","MOVETO_ICON_LINK","DUPLICATETO_ICON_LINK","SECTION_SELECT","MOVETO_SELECT","DUPLICATETO_SELECT","BOX_ID_PREFIX","CHECKBOX_CLASS","HIDDEN_FIELD_REQUEST_INFORMATION","ACTION_FORM","constants","SECTION_SELECT_DESCRIPTION_VALUE","SECTION_NUMBER_ALL_PLACEHOLDER","actions","HIDE","SHOW","MAKE_AVAILABLE","DUPLICATE","DELETE","MOVE_LEFT","MOVE_RIGHT","MOVE_TO","DUPLICATE_TO","init","courseId","pendingPromise","Pending","rebuildSections","observer","MutationObserver","mutations","filter","mutation","type","mutationsSection","addedNodes","length","every","target","classList","contains","mutationsActivities","removedNodes","allRemovedNodes","forEach","item","descendants","getAllDescendants","concat","node","nodeType","document","addEventListener","event","readyState","setTimeout","observe","body","subtree","childList","attributes","characterData","getElementById","setSectionSelection","submitAction","resolve","value","sectionNumber","boxIds","sectionId","j","push","boxId","box","i","checked","action","submitData","checkbox","moduleIds","moduleId","displayError","Str","get_string","moveToTarget","trim","duplicateToTarget","JSON","stringify","submit","errorText","Promise","then","text","require","notification","alert","catch","promises","Ajax","call","methodname","args","all","data","nodes","allNodes","getDescendants","child","childNodes"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Main module for the massaction block.\r\n *\r\n * @module     block_massaction/massactionblock\r\n * @copyright  2022 ISB Bayern\r\n * @author     Philipp Memmel\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport checkboxManager from './checkboxmanager';\r\nimport * as Str from 'core/str';\r\nimport Ajax from 'core/ajax';\r\nimport Pending from 'core/pending';\r\n\r\nlet sectionBoxes = {};\r\nlet isRebuilding = false;\r\n\r\nexport const usedMoodleCssClasses = {\r\n    SECTION_NAME: 'sectionname',\r\n    MODULE_ID_PREFIX: 'module-',\r\n    SPINNER: 'spinner',\r\n    DNDUPLOAD: 'dndupload-progress-outer',\r\n};\r\n\r\nexport const cssIds = {\r\n    SELECT_ALL_LINK: 'block-massaction-control-selectall',\r\n    DESELECT_ALL_LINK: 'block-massaction-control-deselectall',\r\n    HIDE_LINK: 'block-massaction-action-hide',\r\n    SHOW_LINK: 'block-massaction-action-show',\r\n    MAKE_AVAILABLE_LINK: 'block-massaction-action-makeavailable',\r\n    DUPLICATE_LINK: 'block-massaction-action-duplicate',\r\n    DELETE_LINK: 'block-massaction-action-delete',\r\n    MOVELEFT_LINK: 'block-massaction-action-moveleft',\r\n    MOVERIGHT_LINK: 'block-massaction-action-moveright',\r\n    MOVETO_ICON_LINK: 'block-massaction-action-moveto',\r\n    DUPLICATETO_ICON_LINK: 'block-massaction-action-duplicateto',\r\n    SECTION_SELECT: 'block-massaction-control-section-list-select',\r\n    MOVETO_SELECT: 'block-massaction-control-section-list-moveto',\r\n    DUPLICATETO_SELECT: 'block-massaction-control-section-list-duplicateto',\r\n    BOX_ID_PREFIX: 'block-massaction-module-selector-',\r\n    CHECKBOX_CLASS: 'block-massaction-checkbox',\r\n    HIDDEN_FIELD_REQUEST_INFORMATION: 'block-massaction-control-request',\r\n    ACTION_FORM: 'block-massaction-control-form',\r\n};\r\n\r\nexport const constants = {\r\n    SECTION_SELECT_DESCRIPTION_VALUE: 'description',\r\n    SECTION_NUMBER_ALL_PLACEHOLDER: 'all',\r\n};\r\n\r\nconst actions = {\r\n    HIDE: 'hide',\r\n    SHOW: 'show',\r\n    MAKE_AVAILABLE: 'makeavailable',\r\n    DUPLICATE: 'duplicate',\r\n    DELETE: 'delete',\r\n    MOVE_LEFT: 'moveleft',\r\n    MOVE_RIGHT: 'moveright',\r\n    MOVE_TO: 'moveto',\r\n    DUPLICATE_TO: 'duplicateto',\r\n};\r\n\r\n/**\r\n * Initialize the mass-action block.\r\n *\r\n * @param {int} courseId the id of the current course.\r\n */\r\nexport const init = async(courseId) => {\r\n\r\n    const pendingPromise = new Pending('block_massaction/init');\r\n    rebuildSections(courseId);\r\n\r\n    /*\r\n     * This is definitely not what you want to do, but there is probably no better way:\r\n     * Observe all changes to the DOM of the body, and filter the correct mutations to get the following events:\r\n     * - Drag&Drop moving of a module\r\n     * - Drag&Drop upload of files\r\n     * - Change of section names\r\n     * - Drag&Drop moving of sections\r\n     * In all cases: get new information from webservice and re-render the plugin.\r\n     * Care: It doesn't react to renaming of modules, because it's only relevant for name/aria-label of the\r\n     * checkboxes. This slight imperfection is being ignored in favour of performance.\r\n     */\r\n    const observer = new MutationObserver(function(mutations) {\r\n        mutations = mutations.filter(mutation => mutation.type === 'childList');\r\n        const mutationsSection = mutations\r\n            .filter(mutation => mutation.addedNodes && mutation.addedNodes.length > 0);\r\n        // Typical MutationObserver record pattern if two sections have been swapped:\r\n        // The MutationRecord contains two newly added elements, both of them have a 'sectionname' class.\r\n        if (mutationsSection.length === 2\r\n            && mutationsSection.every(mutation => mutation.target.classList.contains(usedMoodleCssClasses.SECTION_NAME))) {\r\n            rebuildSections(courseId);\r\n            // We already triggered the rebuild, no need to search for further mutation observer events.\r\n            return;\r\n        }\r\n\r\n        // Build the node tree recursively to later check if some of the objects has been removed.\r\n        const mutationsActivities = mutations\r\n            .filter(mutation => mutation.removedNodes && mutation.removedNodes.length > 0);\r\n        let allRemovedNodes = [];\r\n        mutationsActivities.forEach(item => {\r\n            const descendants = getAllDescendants(item.removedNodes);\r\n            if (descendants) {\r\n                allRemovedNodes = allRemovedNodes.concat(descendants);\r\n            }\r\n        });\r\n\r\n        if (allRemovedNodes.length > 0) {\r\n            // First remove all text nodes (nodeType 3).\r\n            allRemovedNodes.filter(node => node.nodeType !== 3).forEach(node => {\r\n                // Then check if a spinner has been removed (indicates end of drag'n'drop move and changing of section name) or\r\n                // if a dndupload-progress-outer item has been removed -> indicates a finished drag'n'drop file upload.\r\n                if (node.classList && node.classList.contains(usedMoodleCssClasses.SPINNER)\r\n                    || node.classList.contains(usedMoodleCssClasses.DNDUPLOAD)) {\r\n                    rebuildSections(courseId);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    // Activate the mutation observer for tracking drag'n'drop changes.\r\n    // Unfortunately there seems to be some moodle JS which is loaded AFTER the readystatechange event has been set to 'completed'.\r\n    // Thus, we have to go for an additional timeout to wait for it.\r\n    document.addEventListener('readystatechange', event => {\r\n        if (event.target.readyState === 'complete') {\r\n            setTimeout(() => observer.observe(document.body, {\r\n                subtree: true,\r\n                childList: true,\r\n                attributes: false,\r\n                characterData: false\r\n            }), 1000);\r\n        }\r\n    });\r\n\r\n    document.getElementById(cssIds.SELECT_ALL_LINK)?.addEventListener('click',\r\n        () => setSectionSelection(true, constants.SECTION_NUMBER_ALL_PLACEHOLDER), false);\r\n\r\n    document.getElementById(cssIds.DESELECT_ALL_LINK)?.addEventListener('click',\r\n        () => setSectionSelection(false, constants.SECTION_NUMBER_ALL_PLACEHOLDER), false);\r\n\r\n    document.getElementById(cssIds.HIDE_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.HIDE), false);\r\n\r\n    document.getElementById(cssIds.SHOW_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.SHOW), false);\r\n\r\n    document.getElementById(cssIds.MAKE_AVAILABLE_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.MAKE_AVAILABLE), false);\r\n\r\n    document.getElementById(cssIds.DUPLICATE_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.DUPLICATE), false);\r\n\r\n    document.getElementById(cssIds.DELETE_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.DELETE), false);\r\n\r\n    document.getElementById(cssIds.MOVELEFT_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.MOVE_LEFT), false);\r\n\r\n    document.getElementById(cssIds.MOVERIGHT_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.MOVE_RIGHT), false);\r\n\r\n    document.getElementById(cssIds.MOVETO_ICON_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.MOVE_TO), false);\r\n    \r\n    document.getElementById(cssIds.DUPLICATETO_ICON_LINK)?.addEventListener('click',\r\n        () => submitAction(actions.DUPLICATE_TO), false);\r\n\r\n    pendingPromise.resolve();\r\n};\r\n\r\n/**\r\n * Select all module checkboxes in section(s).\r\n *\r\n * @param {boolean} value the checked value to set the checkboxes to\r\n * @param {string} sectionNumber the section number of the section which all modules should be checked/unchecked. Use \"all\" to\r\n * select/deselect modules in all sections.\r\n */\r\nexport const setSectionSelection = (value, sectionNumber) => {\r\n    const boxIds = [];\r\n\r\n    if (typeof sectionNumber !== 'undefined' && sectionNumber === constants.SECTION_SELECT_DESCRIPTION_VALUE) {\r\n        // Description placeholder has been selected, do nothing.\r\n        return;\r\n    } else if (typeof sectionNumber !== 'undefined' && sectionNumber === constants.SECTION_NUMBER_ALL_PLACEHOLDER) {\r\n        // See if we are toggling all sections.\r\n        for (const sectionId in sectionBoxes) {\r\n            for (let j = 0; j < sectionBoxes[sectionId].length; j++) {\r\n                boxIds.push(sectionBoxes[sectionId][j].boxId);\r\n            }\r\n        }\r\n    } else {\r\n        // We select all boxes of the given section.\r\n        sectionBoxes[sectionNumber].forEach(box => boxIds.push(box.boxId));\r\n    }\r\n    // Un/check the boxes.\r\n    for (let i = 0; i < boxIds.length; i++) {\r\n        document.getElementById(boxIds[i]).checked = value;\r\n    }\r\n};\r\n\r\n/**\r\n * Submit the selected action to server.\r\n *\r\n * @param {string} action\r\n * @return {boolean} true if action was successful, false otherwise\r\n */\r\nconst submitAction = (action) => {\r\n    const submitData = {\r\n        'action': action,\r\n        'moduleIds': []\r\n    };\r\n\r\n    // Get the checked box IDs.\r\n    for (let sectionNumber in sectionBoxes) {\r\n        for (let i = 0; i < sectionBoxes[sectionNumber].length; i++) {\r\n            const checkbox = document.getElementById(sectionBoxes[sectionNumber][i].boxId);\r\n            if (checkbox.checked) {\r\n                submitData.moduleIds.push(sectionBoxes[sectionNumber][i].moduleId);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Verify that at least one checkbox is checked.\r\n    if (submitData.moduleIds.length === 0) {\r\n        displayError(Str.get_string('noitemselected', 'block_massaction'));\r\n        return false;\r\n    }\r\n\r\n    // Prep the submission.\r\n    switch (action) {\r\n        case actions.HIDE:\r\n        case actions.SHOW:\r\n        case actions.MAKE_AVAILABLE:\r\n        case actions.DUPLICATE:\r\n        case actions.MOVE_LEFT:\r\n        case actions.MOVE_RIGHT:\r\n            break;\r\n\r\n        case actions.DELETE:\r\n            // Confirm.\r\n            break;\r\n\r\n        case actions.MOVE_TO:\r\n            // Get the target section.\r\n            submitData.moveToTarget = document.getElementById(cssIds.MOVETO_SELECT).value;\r\n            if (submitData.moveToTarget.trim() === '') {\r\n                displayError(Str.get_string('nomovingtargetselected', 'block_massaction'));\r\n                return false;\r\n            }\r\n            break;\r\n\r\n        case actions.DUPLICATE_TO:\r\n            // Get the target section.\r\n            submitData.duplicateToTarget = document.getElementById(cssIds.DUPLICATETO_SELECT).value;\r\n            if (submitData.duplicateToTarget.trim() === '') {\r\n                displayError(Str.get_string('nomovingtargetselected', 'block_massaction'));\r\n                return false;\r\n            }\r\n            break;\r\n        default:\r\n            displayError('Unknown action: ' + action + '. Coding error.');\r\n            return false;\r\n    }\r\n    // Set the form value and submit.\r\n    document.getElementById(cssIds.HIDDEN_FIELD_REQUEST_INFORMATION).value = JSON.stringify(submitData);\r\n    document.getElementById(cssIds.ACTION_FORM).submit();\r\n    return true;\r\n};\r\n\r\nconst displayError = (errorText) => {\r\n    Promise.resolve([Str.get_string('error', 'core'), errorText, Str.get_string('back', 'core')]).then(text => {\r\n        require(['core/notification'], function (notification) {\r\n            notification.alert(text[0], text[1], text[2]).then().catch();\r\n        });\r\n        return null;\r\n    }).catch();\r\n};\r\n\r\n/**\r\n * This method rebuilds the data structure stored in 'sections'. This is neccessary whenever a drag'n'drop\r\n * operation is being done in the course which leads to a change of the section information. It calls a\r\n * webservice to retrieve the updated section (and modules) data.\r\n *\r\n * This method implements a mechanism to only send a single request at once. Multiple requests arriving while\r\n * the promise for the request hasn't been resolved yet are being ignored.\r\n *\r\n * @param {number} courseId the course id of the course to get the section information from the webservice\r\n */\r\nconst rebuildSections = (courseId) => {\r\n    // Only rebuild if we're not yet trying to get the new data from the webservice.\r\n    if (isRebuilding) {\r\n        return;\r\n    }\r\n\r\n    isRebuilding = true;\r\n    // Setting a hardcoded timeout like this is ugly, but due to a hardcoded timeout in the yui library\r\n    // there probably is no better way to handle this.\r\n    setTimeout(() => {\r\n        const promises = Ajax.call(\r\n            [\r\n                {\r\n                    methodname: 'block_massaction_get_sections',\r\n                    args: {'courseId': courseId},\r\n                },\r\n                {\r\n                    methodname: 'block_massaction_get_modulesinfo',\r\n                    args: {'courseId': courseId},\r\n                }\r\n            ]);\r\n\r\n        Promise.all([promises[0], promises[1]]).then(data => {\r\n            // The array data[0] contains sections information, data[1] the module names.\r\n            sectionBoxes = checkboxManager(data[0], data[1]);\r\n            isRebuilding = false;\r\n            return true;\r\n        }).catch(() => {\r\n            isRebuilding = false;\r\n            return false;\r\n        });\r\n    }, 1000);\r\n};\r\n\r\n/**\r\n * Utility method to get an array of all descendent nodes of a given nodeList recursively.\r\n *\r\n * @param {NodeList} nodes The NodeList to convert to a flat array of nodes.\r\n * @return {[Node]} array of recursively found nodes.\r\n */\r\nconst getAllDescendants = (nodes) => {\r\n    const allNodes = [];\r\n    const getDescendants = (node) => {\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            const child = node.childNodes[i];\r\n            getDescendants(child);\r\n            allNodes.push(child);\r\n        }\r\n    };\r\n    for (let j = 0; j < nodes.length; j++) {\r\n        getDescendants(nodes[j]);\r\n    }\r\n    return allNodes;\r\n};\r\n"],"file":"massactionblock.min.js"}